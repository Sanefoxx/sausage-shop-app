include:
  - template: Security/SAST.gitlab-ci.yml

cache:
  key: $CI_COMMIT_REF_SLUG-frontend
  paths:
    - frontend/dist/frontend
  
variables:
  VERSION: 1.0.${CI_PIPELINE_ID}
  SAST_EXCLUDED_ANALYZERS: "spotbugs-sast"
  
stages:
  - build
  - test
  - release
  - deploy-production
  - notify

build-frontend-job: # задача с именем build-code-job
  stage: build   # этап build
  script:
    - cd frontend
    - npm install karma@6.3.20
    - npm install # загрузка всех сторонних зависимостей
    - npm run build
  rules:
    - changes:
        - frontend/*

sonarqube-frontend-sast:
  stage: test
  image: sonarsource/sonar-scanner-cli:4.7
  script:
    - cd frontend
    - >
      sonar-scanner -Dsonar.qualitygate.wait=true
      -Dsonar.projectKey=${SONAR_PROJECT_KEY_FRONTEND}
      -Dsonar.projectName=${SONAR_PROJECT_NAME_FRONTEND}
      -Dsonar.sources=.
      -Dsonar.host.url=${SONARQUBE_URL}
      -Dsonar.login=${SONAR_LOGIN}

upload-frontend-release:
  stage: release
  script:
    - tar czvf sausage-store-${VERSION}.tar.gz frontend/dist/frontend
    - curl -v -u "${NEXUS_REPO_USER}:${NEXUS_REPO_PASS}" --upload-file sausage-store-${VERSION}.tar.gz ${NEXUS_REPO_URL_FRONTEND}/sausage-store-front/sausage-store/${VERSION}/sausage-store-${VERSION}.tar.gz
  rules:
    - changes:
        - frontend/*
        
deploy-frontend-prod:
  stage: deploy-production
  when: manual
  environment:
    name: frontend-production/$CI_COMMIT_REF_SLUG
  before_script:
    #устанавливаем ssh-agent для удобства аутентификации по ssh
    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    #сохраняем сгенеренный ранее приватный ключ для раннера
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 600 ~/.ssh
    - echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - scp ./frontend/sausage-store-frontend.service ${DEV_USER}@${DEV_HOST}:/home/${DEV_USER}/sausage-store-frontend.service
    - ssh ${DEV_USER}@${DEV_HOST}
      "export "CURRENT_VERSION=${VERSION}";
      export "VERSION=${VERSION}";
      export "DEV_HOST=${DEV_HOST}";
      export "NEXUS_REPO_URL=${NEXUS_REPO_URL_FRONTEND}";
      export "NEXUS_REPO_USER=${NEXUS_REPO_USER}";
      export 'NEXUS_REPO_PASS=${NEXUS_REPO_PASS}';
      setsid /bin/bash -s " < ./frontend/deploy.sh
    
send-notification:
  stage: notify
  script:
    - "curl -X POST -H 'Content-type: application/json' --data '{\"text\": \"Вышла новая версия фронтенда сосисочной — \'${VERSION}\'.
       Скачать можно по ссылке — <\'${NEXUS_REPO_URL_FRONTEND}\'sausage-store-front/sausage-store/\'${VERSION}\'/sausage-store-\'${VERSION}\'.tar.gz|Link to frontend> .\"}'
       https://hooks.slack.com/services/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"
